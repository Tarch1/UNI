#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

setxkbmap -layout it &
numlockx &
wal -i ~/.wallpapers/ -o ~/.config/dunst/dunst-color.sh &
xset s 60 120
xss-lock -n "notify-send -u critical -t 5000 -- 'LOCKING in 2 min'" -- slock &
picom &
./.config/low-battery.sh &
./.config/polybar/launch.sh &

# remove all existing keybindings
hc keyunbind --all

Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-w close
hc keybind $Mod-Return spawn rofi -show combi
hc keybind $Mod-z spawn "${TERMINAL:-kitty}" # use your $TERMINAL with xterm as fallback

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                        \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme

. "${HOME}/.cache/wal/colors.sh"

hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
#hc set frame_border_active_color '$color1'
#'#222222'
#hc set frame_border_normal_color '$color2'
#'#101010'
#hc set frame_bg_normal_color '$color3'
#'#565656'
#hc set frame_bg_active_color '$color4'
#'#345F0C'
hc set frame_border_width 0
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 0

hc attr theme.active.color '$color1'
#'#9fbc00'
hc attr theme.normal.color '$color2'
#'#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color '$color5'
hc attr theme.border_width 2
hc attr theme.floating.border_width 2
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '$color1'

hc set window_gap 10
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

hc keybind XF86MonBrightnessUp spawn light -A 1
hc keybind XF86MonBrightnessDown spawn light -U 1
hc keybind XF86AudioRaiseVolume spawn sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 +1%"
hc keybind XF86AudioLowerVolume spawn sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 -1%"
hc keybind XF86AudioMute spawn pactl set-sink-mute 0 toggle
hc keybind XF86AudioMicMute spawn pactl set-source-mute 1 toggle
#hc keybind XF86Sleep spawn dm-tool lock
hc keybind $Mod-F11 spawn dm-tool lock
hc keybind $Mod-e spawn pcmanfm
hc keybind XF86ScreenSaver spawn light -S 0
hc keybind XF86TouchpadToggle spawn ~/.config/toggle-touchpad.sh
