#!/bin/bash

y="pkg_microcode pkg_base pkg_ext pkg_init pkg_dev pkg_baseutils
   pkg_fs pkg_net pkg_audio pkg_android pkg_bluetooth pkg_print 
   pkg_xorg pkg_apps pkg_nvidiagraphics pkg_hardwareacceleration
   pkg_filemanager pkg_archive pkg_media pkg_elogind pkg_rc"
   
RepoList=( '[extra]' 'Include = /etc/pacman.d/mirrorlist-arch'
         '[community]' 'Include = /etc/pacman.d/mirrorlist-arch'
         '[multilib]' 'Include = /etc/pacman.d/mirrorlist-arch' )
         
pkg_microcode=(intel-ucode)
pkg_base=(base base-devel linux linux-firmware)
pkg_ext=(vulkan-icd-loader lib32-vulkan-icd-loader lib32-mesa vulkan-intel lib32-vulkan-intel vulkan-mesa-layers)
pkg_init=()
pkg_dev=(wget git ntp linux-headers)
pkg_baseutils=(man bash-completion kitty vim nano)
pkg_fs=(efibootmgr os-prober mtools parted dosfstools sbsigntools ntfs-3g gvfs-mtp)
pkg_net=(networkmanager network-manager-applet)
pkg_audio=(pipewire wireplumber pipewire-pulse pipewire-alsa pipewire-jack lib32-pipewire lib32-pipewire-jack)
pkg_android=(android-tools android-udev)
pkg_bluetooth=(bluez bluez-utils bluez-plugins)
pkg_print=(cups cups-pdf system-config-printer avahi)
pkg_xorg=(xorg-server xorg-xinit xorg-xinit light numlockx libinput xorg-xinput xss-lock)
pkg_apps=(telegram-desktop firefox feh calc fd bpytop adriconf)
pkg_nvidiagraphics=(nvidia-prime nvidia nvidia-utils lib32-nvidia-utils nvidia-settings)
pkg_hardwareacceleration=(libva-mesa-driver mesa-vdpau intel-media-drive)
pkg_filemanager=(xed vifm pcmanfm tumbler raw-thumbnailer)
pkg_archive=(file-roller atool bzip2 cpio gzip lha xz lzop p7zip tar unrar zip unzip)
pkg_media=(celluloid mate-utils pantheon-screenshot simplescreenrecorder)
pkg_elogind=()
pkg_rc=(ntp-openrc avahi-openrc cups-openrc bluez-openrc networkmanager-openrc)

ghb=0

PkgDatabase () {
sed -i '/\[lib32]/,/mirrorlist/ s/#//' /etc/pacman.conf
pacman-key --init
pacman-key --populate artix
pacman -Sy "${pkgskips[@]}" artix-archlinux-support #lib32-artix-archlinux-support
#for p in "${RepoList[@]}"; do
#   echo "$p" >> /etc/pacman.conf
#done
pacman -Sy
pacman -Slq system world galaxy extra community multilib | sort > pacman_db
}

AnotherCheck () {
echo "${miss[@]}" | tr ' ' '\n' | sort -u > pkglist
mapfile -t unlisted < <(comm -13 pacman_db pkglist)
#IFS=" " read -r -a unlisted <<< "$(comm -13 pacman_db pkglist)"
echo "Unlisted=${unlisted[@]}"
}

PkgCheck () {
for a in $y; do
  var="$a"'[@]'   #the y element with a [@] to be like an array
  temp=${!var}  #splitting the every y[@] element inside temp to simulate a subarray
  for b in $temp; do   #for every element of subarr temp  
    if ! pacman -Ss "$b" 1>/dev/null; then  #check if doesn't exist
      echo "[x] Package not available: $b from $var"
      miss+=("$b")    #add missing element to new array miss
    else new+=("$b")
    fi
    ghb=$((ghb+1))
    echo -ne '['"$ghb"'%]\r'
  done
  unset "$a"
  declare "$a"="${new[*]}"
  unset new
done
echo 'miss=' "${miss[@]}"
for c in $y; do
  local d="$c"'[@]'
  echo "$c=""${!d}"
done
}
PkgDatabase
PkgCheck
AnotherCheck
