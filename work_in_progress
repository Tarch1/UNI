#!/bin/bash
#add zenith support
main() {
    # If there is argument, the assigned cases will be executed.
    while [[ $# -gt 0 ]] && [[ $1 == "--"* ]];
    do
        option=$1;
        shift;
        case $option in
        	"arch"*) echo test ;;
            "--version")
                whiptail --title "cfetch" --msgbox "cfetch version 0.1.3" 10 50;;
            "--help") usage;;
            *) fetch;;
        esac
    done

    # If the argument does not match on the cases, then system information will
    # be displayed.
    if [[ $option != "--"* ]]; then
        fetch
    fi
}
main "$@"

SelSteps () {
  OSSelection=( '4' 'Enter the distro we are going to setup : 1) Arch 2) Artix 3) Void \n'
                'OSSel' ''
                '1|Arch|arch' 'distro selected : Arch' 'Arch'
                '2|Artix|artix' 'distro selected : Artix' 'Artix'
                '3|Void|void' 'distro selected : Void' 'Void'
                'echo "Wrong choice, type again" && OperatingSystemSel' )
  
  SelS=( 'OSSelection[@]' ) ## LocalizationSel 'LanguageSel' 'TimezoneSel' 
  ## 'HostnameSel' 'UsernameSel' 'PartIDSel' 'FilesystemSel' 'BootloaderSel' )
  for i in "${SelS[@]}"; do
    var=("${!i}")
    echo -en "${var[1]}"
    read -r "${var[2]}"
    #YesNoSel "${var[3]}"
    case "${var[2]}" in
      2) case "${var[2]}" in
           "${var[4]}") echo "${var[5]}" && eval "${var[2]}"="${var[6]}" ;;
           *) "${var[6]}" ;;
         esac ;;
      3) case "${var[2]}" in
           "${var[4]}") echo "${var[5]}" && eval "${var[2]}"="${var[6]}" ;;
           "${var[7]}") echo "${var[8]}" && eval "${var[2]}"="${var[9]}" ;;
           *) "${var[10]}" ;;
         esac ;;
      4) case "${var[2]}" in
           "${var[4]}") echo "${var[5]}" && eval "${var[2]}"="${var[6]}" ;;
           "${var[7]}") echo "${var[8]}" && eval "${var[2]}"="${var[9]}" ;;
           "${var[10]}") echo "${var[11]}" && eval "${var[2]}"="${var[12]}" ;;
           *) "${var[13]}" ;;
         esac ;;
      *) ;;
    esac
    echo doned "${var[2]}"
  done
}
SelSteps
