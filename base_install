#!/bin/bash

########## INSTALLATION-SCRIPT ##########
if [ "$(id -u)" -ne 0 ]; then echo 'Please run as root.' >&2; exit 1; fi

Show_error () {
	echo "Error in function= ${FUNCNAME[1]}" >&2 && exit 1
}

Check_required_files () {
	local file_needed=( additional_setup full_setup Bootloader/Refind/{refind.conf,refind_linux.conf,themes/Blur-theme/theme.conf}
					Bootloader/Grub-Eiffel/{theme.txt,select_c.png,select_e.png,select_w.png,eiffel_tower_under_construction.png,icons/arch.png} )
	for a in "${file_needed[@]}"; do 
		if [[ -f "$(pwd)/$a" ]]; then  echo "File checked: $a"; else
		echo "Missing required file: $a"
		miss+=("$a") ; fi
	done
	if [[ -v miss ]]; then 
	echo 'Required file(s) for the good work of installation:' "${miss[@]}" && Show_error
	else source additional_setup ; fi
}

DiskPartition () {
	swapoff
	umount -R /mnt
	"$pkgmanager" -Sy "${pkgskips[@]}" parted gptfdisk mtools ntfs-3g dialog || Show_error
	mapfile -t devicelist < <(lsblk -dplnx size -o name | grep -Ev "boot|rpmb|loop" | tac)
	mapfile -t devicesize < <(lsblk -dplnx size -o size | grep -Ev "boot|rpmb|loop" | tac)
	DRIVE="$(dialog --stdout --menu "Select OS INSTALLATION disk" 0 0 0 "${devicelist[0]}" "${devicesize[0]}" "${devicelist[1]}" "${devicesize[1]}" || exit 1)"
	EXT_DRIVE="$(dialog --stdout --menu "Select NOT REGARDING OF OS INSTALLATION disk" 0 0 0 "${devicelist[0]}" "${devicesize[0]}" "${devicelist[1]}" "${devicesize[1]}" || exit 1)"
}
