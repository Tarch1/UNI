#!/bin/bash

########## INSTALLATION-SCRIPT ##########
if [ "$(id -u)" -ne 0 ]; then echo 'Please run as root.' >&2; exit 1; fi

Show_error () {
	echo "Error in function= ${FUNCNAME[1]}" >&2 && exit 1
}

Check_required_files () {
	local file_needed=( additional_setup full_setup Bootloader/Refind/{refind.conf,refind_linux.conf,themes/Blur-theme/theme.conf}
			Bootloader/Grub-Eiffel/{theme.txt,select_c.png,select_e.png,select_w.png,eiffel_tower_under_construction.png,icons/arch.png} )
	for a in "${file_needed[@]}"; do 
		if [[ -f "$(pwd)/$a" ]]; then  echo "File checked: $a"; else
		echo "Missing required file: $a"
		miss+=("$a") ; fi
	done
	if [[ -v miss ]]; then 
	echo 'Required file(s) for the good work of installation:' "${miss[@]}" && Show_error
	else source additional_setup ; fi
}

DiskPartition () {
	swapoff -a
	umount -R /mnt
	"$pkgmanager" -Sy "${pkgskips[@]}" parted gptfdisk mtools ntfs-3g dialog || Show_error
	mapfile -t devicelist < <(lsblk -dplnx size -o name | grep -Ev "boot|rpmb|loop" | tac)
	mapfile -t devicesize < <(lsblk -dplnx size -o size | grep -Ev "boot|rpmb|loop" | tac)
	DRIVE="$(dialog --stdout --menu "Select OS INSTALLATION disk" 0 0 0 "${devicelist[0]}" "${devicesize[0]}" "${devicelist[1]}" "${devicesize[1]}" || exit 1)"
	EXT_DRIVE="$(dialog --stdout --menu "Select NOT REGARDING OF OS INSTALLATION disk" 0 0 0 "${devicelist[0]}" "${devicesize[0]}" "${devicelist[1]}" "${devicesize[1]}" || exit 1)"
	wipefs -a "$DRIVE" #for erase all block (but very slower) use dd if=/dev/zero of="$DRIVE" bs=4096 status=progress
	parted -sf "$DRIVE" mktable gpt mkpart "ESP" 0% 1% mkpart "LINUX-HOME" 1% 100% set 1 esp on set 2 linux-home on
	if echo "$DRIVE" | grep "^/dev/[a-z]d[a-z]"; then
	BOOT_PART="$DRIVE"1 && ROOT_PART="$DRIVE"2 && DEVICE="${DRIVE#/*/}"
	elif echo "$DRIVE" | grep "^/dev/nvme"; then
	BOOT_PART="$DRIVE"p1 && ROOT_PART="$DRIVE"p2 && DEVICE="${DRIVE#/*/}" #printf -v BOOT_PART "%sp1" "$DRIVE"
	elif echo "$DRIVE" | grep "^/dev/mmc"; then
	BOOT_PART="$DRIVE"1 && ROOT_PART="$DRIVE"2 && DEVICE="${DRIVE#/*/}"
	fi
	echo DRIVE="$DRIVE" DEVICE="$DEVICE" && if [[ -z $DRIVE || -z $DEVICE ]]; then Show_error ;
	else echo 'We can proceed with the formatting of file system' ; fi
	BOOTID="$(blkid -s "$PIDSel" -o value "$BOOT_PART")"
	ROOTID="$(blkid -s "$PIDSel" -o value "$ROOT_PART")"
	echo BP="$BOOT_PART" RP="$ROOT_PART" PID="$PIDSel"
	echo "$PIDSel"_BOOT="$BOOTID" "$PIDSel"_ROOT="$ROOTID" 
	lsblk -f
}

FileSystemFormat () {
	BootLabel='EFI'
	RootLabel='ROOT'
	mkfs.fat -F32 -n "$BootLabel" "$BOOT_PART"
	case "$FSSel" in
	Ext4)
		mkfs.ext4 -L "$RootLabel" "$ROOT_PART"
		mount "$ROOT_PART" /mnt
		FstabType='ext4'
		FstabOptions=''
	;;
	esac
}
